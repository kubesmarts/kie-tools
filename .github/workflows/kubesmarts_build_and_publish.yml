name: "Kubesmarts :: Build and Publish"

on:
  workflow_call:
    inputs:
      dry_run:
        type: boolean
        required: true
      environment:
        description: Environment for the workflow (dev, staging, prod)
        required: true
        default: dev
        type: string
      tag:
        description: Tag for the images and kie-tools branch, leave default for dev environment
        type: string
        required: false
        default: main
      version:
        description: Sandbox version, leave default for dev environment.
        type: string
        required: false
        default: 0.0.0
    secrets:
      KIE1_TOKEN:
        required: true
      KIE1_USER_NAME:
        required: true
      KIE1_EMAIL:
        required: true
env:
  SERVERLESS_LOGIC_SANDBOX_DEPLOYMENT_REPO: ${{ vars.SERVERLESS_LOGIC_SANDBOX_DEPLOYMENT_REPO || 'kubesmarts/sandbox-deployment' }}
  DASHBUILDER__viewerImageAccount: "kubesmarts"
  DASHBUILDER__viewerImageName: "incubator-kie-dashbuilder-viewer"
  DASHBUILDER__viewerImageRegistry: "quay.io"
  GITHUB_TOKEN: ${{ secrets.KIE1_TOKEN }}
  KIE_TOOLS_BUILD__buildContainerImages: "false"
  KIE_TOOLS_BUILD__runEndToEndTests: "false"
  KIE_TOOLS_BUILD__runLinters: "false"
  KIE_TOOLS_BUILD__runTests: "false"
  SERVERLESS_LOGIC_WEB_TOOLS__baseBuilderImageAccount: "kubesmarts"
  SERVERLESS_LOGIC_WEB_TOOLS__baseBuilderImageName: "incubator-kie-serverless-logic-web-tools-base-builder"
  SERVERLESS_LOGIC_WEB_TOOLS__baseBuilderImageRegistry: "quay.io"
  SERVERLESS_LOGIC_WEB_TOOLS__baseBuilderImageTag: "${{ inputs.tag }}"
  SERVERLESS_LOGIC_WEB_TOOLS__buildInfo: ""
  SERVERLESS_LOGIC_WEB_TOOLS__corsProxyUrl: ${{ (inputs.environment == 'dev' &&  'https://daily-dev-cors-proxy-kie-sandbox.rhba-0ad6762cc85bcef5745bb684498c2436-0000.us-south.containers.appdomain.cloud' ) || (inputs.environment == 'staging' &&  'https://staging-cors-proxy-kie-sandbox.rhba-0ad6762cc85bcef5745bb684498c2436-0000.us-south.containers.appdomain.cloud' ) || 'https://cors-proxy-kie-sandbox.rhba-0ad6762cc85bcef5745bb684498c2436-0000.us-south.containers.appdomain.cloud' }}
  SERVERLESS_LOGIC_WEB_TOOLS__dashbuilderViewerImageTag: "${{ inputs.tag }}"
  SERVERLESS_LOGIC_WEB_TOOLS__samplesRepositoryName: "sandbox-catalog"
  SERVERLESS_LOGIC_WEB_TOOLS__samplesRepositoryOrg: "kubesmarts"
  SERVERLESS_LOGIC_WEB_TOOLS__samplesRepositoryRef: "${{ inputs.version }}"
  SERVERLESS_LOGIC_WEB_TOOLS__swfBuilderImageAccount: "kubesmarts"
  SERVERLESS_LOGIC_WEB_TOOLS__swfBuilderImageName: "incubator-kie-serverless-logic-web-tools-swf-builder"
  SERVERLESS_LOGIC_WEB_TOOLS__swfBuilderImageRegistry: "quay.io"
  SERVERLESS_LOGIC_WEB_TOOLS__swfBuilderImageTag: "${{ inputs.tag }}"
  SERVERLESS_LOGIC_WEB_TOOLS__swfDevModeImageAccount: "kubesmarts"
  SERVERLESS_LOGIC_WEB_TOOLS__swfDevModeImageName: "incubator-kie-serverless-logic-web-tools-swf-dev-mode"
  SERVERLESS_LOGIC_WEB_TOOLS__swfDevModeImageRegistry: "quay.io"
  SERVERLESS_LOGIC_WEB_TOOLS__swfDevModeImageTag: "${{ inputs.tag }}"
  SERVERLESS_LOGIC_WEB_TOOLS__version: "${{ inputs.version }}"
  WEBPACK__minimize: "true"
  WEBPACK__tsLoaderTranspileOnly: "false"

jobs:
  build:
    if: ${{ vars.SERVERLESS_LOGIC_SANDBOX_DEPLOYMENT_REPO != '' }}
    runs-on: ubuntu-latest
    steps:
      - name: "Clone kie-tools"
        uses: actions/checkout@v3
        with:
          path: kie-tools
          ref: ${{ inputs.tag }}

      - name: "Cache Maven packages"
        if: github.event_name != 'pull_request'
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: "Setup environment"
        uses: ./kie-tools/.github/actions/setup-env
        with:
          working_dir: kie-tools

      - name: "Bootstrap"
        id: bootstrap
        uses: ./kie-tools/.github/actions/bootstrap
        with:
          working_dir: kie-tools

      - name: "Parse `commit_sha`"
        id: commit_sha
        shell: bash
        run: |
          cd kie-tools
          echo "commit_sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: "Build serverless-logic-web-tools"
        run: |
          if [ "${{ inputs.environment }}" = "dev" ]; then
            export SERVERLESS_LOGIC_WEB_TOOLS__buildInfo="${{ inputs.version }} (daily-dev) @ ${{ steps.commit_sha.outputs.commit_sha }}"
          elif [ "${{ inputs.environment }}" = "staging" ]; then
            export SERVERLESS_LOGIC_WEB_TOOLS__buildInfo="${{ inputs.version }} (staging) @ ${{ steps.commit_sha.outputs.commit_sha }}"
          fi
          echo "SERVERLESS_LOGIC_WEB_TOOLS__buildInfo=$SERVERLESS_LOGIC_WEB_TOOLS__buildInfo"
          cd kie-tools
          pnpm -F @kie-tools/serverless-logic-web-tools... build:prod

      - name: "Checkout serverless-logic-sandbox-deployment"
        uses: actions/checkout@v3
        with:
          token: ${{ github.event_name != 'pull_request' && secrets.KIE1_TOKEN || secrets.GITHUB_TOKEN }}
          path: serverless-logic-sandbox-deployment
          repository: ${{ env.SERVERLESS_LOGIC_SANDBOX_DEPLOYMENT_REPO }}
          ref: gh-pages

      - name: "Update serverless-logic-sandbox-deployment resources"
        shell: bash
        run: |
          if [ "${{ inputs.environment }}" == "dev" ]; then
            export DEPLOYMENT_DIR="dev"
          elif [ "${{ inputs.environment }}" == "staging" ]; then
            export DEPLOYMENT_DIR="staging/${{ inputs.version }}"
          else
            export DEPLOYMENT_DIR="."
          fi
          echo "DEPLOYMENT_DIR=$DEPLOYMENT_DIR"
          cd serverless-logic-sandbox-deployment
          shopt -s extglob
          if [ "${{ inputs.environment }}" == "prod" ]; then
            rm -rf -- !("dev"|"staging"|".nojekyll"|"CNAME"|"0.25.0"|"schemas")
          else
            rm -rf $DEPLOYMENT_DIR
            mkdir -p $DEPLOYMENT_DIR
          fi
          cp -r ../kie-tools/packages/serverless-logic-web-tools/dist/* $DEPLOYMENT_DIR
          git config --global user.name "${{ secrets.KIE1_USER_NAME }}"
          git config --global user.email "${{ secrets.KIE1_EMAIL }}"
          echo "Commit changes"
          git add . && git commit -m "Deploy ${{ inputs.version }} (${{ inputs.environment }}) using tag: ${{ inputs.tag }}" || echo "No changes."

      - name: "Dry run: Git push"
        if: ${{ inputs.dry_run || github.event_name == 'pull_request' }}
        shell: bash
        run: |
          echo "Dry run mode: Simulating git push"
          cd serverless-logic-sandbox-deployment
          git push --dry-run origin gh-pages

      - name: "Git push"
        if: ${{ !inputs.dry_run && github.event_name != 'pull_request' }}
        shell: bash
        run: |
          echo "Pushing changes to gh-pages"
          cd serverless-logic-sandbox-deployment
          git push origin gh-pages
